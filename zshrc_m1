# Updated: 2022-03-02

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000000
SAVEHIST=1000000
bindkey -e
# End of lines configured by zsh-newuser-install

export PATH=$PATH:/usr/local/bin

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/shims:$PATH"
eval "$(pyenv init -)"

# Uncomment if necessary
#export PATH=$HOME/opt/bin:$PATH
#export LD_LIBRARY_PATH=$HOME/opt/lib
#export PKG_CONFIG_PATH=$HOME/opt/lib/pkgconfig

# Aliases
alias ls="ls -G"
alias rm="trash"
alias q="exit"
alias lv="less"
alias c="clear"

# Git aliases
# alias gst="git status -s -b"
# alias gush="git push"
# alias gull="git pull"
# alias gecko="git checkout"
# alias gerge="git merge"
# alias granch="git branch"

# Autocompletion
autoload -U compinit
compinit
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z} r:|[-_.]=**'
setopt auto_list
setopt list_types
setopt auto_menu
setopt auto_param_keys
setopt auto_param_slash
setopt magic_equal_subst
zstyle ':completion:*:default' menu select=2
zstyle ':completion:*:options' description 'yes'

function cd(){
    builtin cd $@ && ls;
}

# Setup zmv
autoload -Uz zmv
alias zmv='noglob zmv -W'
LISTMAX=0

# Prompts
setopt prompt_subst

#
# Show branch name in Zsh's prompt
#

autoload -Uz VCS_INFO_get_data_git; VCS_INFO_get_data_git 2> /dev/null

function git-current-branch {
        local name st color gitdir action
        if [[ "$PWD" =~ '/Â¥.git(/.*)?$' ]]; then
                return
        fi
        name=`git rev-parse --abbrev-ref=loose HEAD 2> /dev/null`
        if [[ -z $name ]]; then
                return
        fi

        gitdir=`git rev-parse --git-dir 2> /dev/null`
        action=`VCS_INFO_git_getaction "$gitdir"` && action="($action)"

        st=`git status 2> /dev/null`
        if [[ -n `echo "$st" | grep "^nothing to"` ]]; then
                color=%F{green}
        elif [[ -n `echo "$st" | grep "^nothing added"` ]]; then
                color=%F{yellow}
        elif [[ -n `echo "$st" | grep "^# Untracked"` ]]; then
                color=%B%F{red}
        else
                 color=%F{red}
         fi

        echo "$color$name$action%f%b "
}

PROMPT='[`git-current-branch`${PWD}]
%U@%m >>%u '

setopt correct
setopt nolistbeep
setopt IGNOREEOF
